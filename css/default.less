@sm: 576px;
@md: 768px;
@lg: 992px;
@xl: 1200px;
.h1-resp-style (@xs-size:1rem; @sm-size:1.5rem; @md-size:2rem; @lg-size: 2.3rem;@x-width :@xl; @x-size: @lg-size){
    text-align: center;
    @media (max-width: (@sm - 1) ){font-size: @xs-size;}
    @media (min-width: @sm ) and (max-width: (@md - 1) ){font-size: @sm-size;}
    @media (min-width: @md ) and (max-width: (@lg - 1) ){font-size: @md-size;}
    @media (min-width: @lg )and (max-width: (@x-width - 1) ){font-size: @lg-size;}
    @media (min-width: @x-width ){font-size: @x-size;}
}
//Чтобы изменить не все а несколько аргументов - достаточно написать .h1-resp-style(@x-width:1700px; @x-size: 5rem);
.h3-resp-style (@xs-size:1rem; @sm-size:1.4rem; @md-size:1.70rem){
    text-align: center;
    @media (max-width: (@sm - 1) ){font-size: @xs-size;}
    @media(min-width: @sm ) and (max-width: (@md - 1)){font-size: @sm-size;}
    @media (min-width: @md ){font-size: @md-size;}
}
.rounded(@r: 50%){
    border-radius: @r;
    -moz-border-radius: @r;
    -webkit-border-radius: @r;
}
.transition(@n: .5; @m: .1; @function: ease-out){
    //Первое число отвечает за длительность анимации, второе за время, которое потребуется для срабатывания анимации ( в данном случае если убрать курсор с круга, анимация сработает чере одну десятую секунды), к тому же этот транзишон отвечает за анимацию перехода от состояния hover к обычному состоянию
    @s:0s;
    transition: (@s + @n) @function (@s + @m);//@s+@n - такая запись нужна, чтобы преобразовать просто число , в данном случае 0.5 в 0.5s . т.к. для transition нужны именно секунды. К несчастью запись @n : @s + @n - воспринимается  как рекурсивное переопределение переменной, поэтому приходиться не переопределять переменную.
    -moz-transition: (@s + @n) @function (@s + @m);
    -webkit-transition: (@s + @n) @function (@s + @m);
    -o-transition: (@s + @n) @function (@s + @m);
}
.text{
    &r{
        text-align: right;
        &-none{text-align:inherit;}
        &-sm{
            @media (min-width: @sm ){
                text-align: right;
                &-none{text-align:inherit;}
            }
        }
        &-md{
            @media (min-width: @md ){
                text-align: right;
                &-none{text-align:inherit;}
            }
        }
        &-lg{
            @media (min-width: @lg ){
                text-align: right;
                &-none{text-align:inherit;}
            }
        }
        &-xl{
            @media (min-width: @xl ){
                text-align: right;
                &-none{text-align:inherit;}
            }
        }
    }
    &c{
        text-align: center;
        &-none{text-align:inherit;}
        &-sm{
            @media (min-width: @sm ){
                text-align: center;
                &-none{text-align:inherit;}
            }
        }
        &-md{
            @media (min-width: @md ){
                text-align: center;
                &-none{text-align:inherit;}
            }
        }
        &-lg{
            @media (min-width: @lg ){
                text-align: center;
                &-none{text-align:inherit;}
            }
        }
        &-xl{
            @media (min-width: @xl ){
                text-align: center;
                &-none{text-align:inherit;}
            }
        }
    }
    &l{
        text-align: left;
        &-none{text-align:inherit;}
        &-sm{
            @media (min-width: @sm ){
                text-align: left;
                &-none{text-align:inherit;}
            }
        }
        &-md{
            @media (min-width: @md ){
                text-align: left;
                &-none{text-align:inherit;}
            }
        }
        &-lg{
            @media (min-width: @lg ){
                text-align: left;
                &-none{text-align:inherit;}
            }
        }
        &-xl{
            @media (min-width: @xl ){
                text-align: left;
                &-none{text-align:inherit;}
            }
        }
    }
}
.unselectable {
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}
.outlineless{outline:none;}//Убираем обводку при нажатии или выделении элемента

//Стоит отметить, чтобы задавать высоту этой кнопки нужно создать внутри неё фиктивный, ничем незаполненный div
.button (@r:27px; @button-height;){
    .rounded(@r);
    text-decoration: none;
    display: inline-block;

    &>div{//это искуственно посаженный блок, чтобы задать высоту кнопке.
        display: inline-block;
        height: @button-height;
        vertical-align: middle;//Если не понимаешь зачем тут это свойство, то читай в css>проблемы со свойствами>vertical-align
    }
}
